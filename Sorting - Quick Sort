class Solution {
    public void quicksort(int[] arr, int low, int high) {
        while (low < high) {
            var pivot = partition(arr, low, high);
            quicksort(arr, low, pivot - 1);
            quicksort(arr, pivot + 1, high);
        }
    }
    
    private int partition(int[] arr, int low, int high) {
        var pivot = low;
        for (int cur = low + 1; cur <= high; cur++) {
            if (arr[cur] < arr[low]) {
                swap(arr, ++pivot, cur);
            }
        }
        swap(arr, low, pivot);
        return pivot;
    }
    
    private void swap(int[] arr, int i, int j) {
        var temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
}

TC: O(nlogn)
SC: O(1)
NOTE: in-place; Java's Collections API sort() implements a Dual Pivot Quicksort
