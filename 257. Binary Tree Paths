https://leetcode.com/problems/binary-tree-paths/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        var res = new ArrayList<String>();
        dfs(root, res, "");
        return res;
    }
    
    private void dfs(TreeNode node, List<String> res, String tmp) {
        if (node == null) {
            return;
        }
        if (node.left == null && node.right == null) {
            tmp += node.val;
            res.add(tmp);
            return;
        }
        tmp += node.val + "->";
        dfs(node.left, res, tmp);
        dfs(node.right, res, tmp);
    }
}
