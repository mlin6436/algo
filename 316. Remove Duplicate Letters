https://leetcode.com/problems/remove-duplicate-letters

class Solution {
    public String removeDuplicateLetters(String s) {
        int len = s.length();
        int[] map = new int[26];
        Stack<Character> stack = new Stack<>();

        for (int i = 0; i < len; i++) {
            map[s.charAt(i) - 'a'] = i;
        }

        for (int i = 0; i < len; i++) {
            char cur = s.charAt(i);
            if (!stack.contains(cur)) {
                while (!stack.isEmpty()) {
                    char prev = stack.peek();
                    if (prev > cur && map[prev - 'a'] > i) {
                        stack.pop();
                    } else {
                        break;
                    }
                }
                stack.push(cur);
            }
        }

        StringBuilder sb = new StringBuilder();
        while (!stack.isEmpty()) {
            sb.append(stack.pop());
        }
        return sb.reverse().toString();
    }
}

====

class Solution {
    public String removeDuplicateLetters(String s) {
        int len = s.length();
        Map<Character, Integer> map = new HashMap();
        Stack<Character> stack = new Stack();

        for (int i = 0; i < len; i++) {
            map.put(s.charAt(i), i);
        }

        for (int i = 0; i < len; i++) {
            char cur = s.charAt(i);
            if (stack.isEmpty()) {
                stack.push(cur);
            } else {
                if (stack.contains(cur)) {
                    // do nothing
                } else {
                    while (!stack.isEmpty()) {
                        char prev = stack.peek();
                        if (prev > cur && map.get(prev) > i) {
                            stack.pop();
                        } else {
                            break;
                        }
                    }
    
                    stack.push(cur);
                }
            }
        }

        StringBuilder sb = new StringBuilder();
        while (!stack.isEmpty()) {
            sb.append(stack.pop());
        }
        return sb.reverse().toString();
    }
}
