https://leetcode.com/problems/implement-queue-using-stacks/

class MyQueue {

    Stack<Integer> st = new Stack();
    Stack<Integer> tmp = new Stack();
    int res;

    public MyQueue() {
        
    }
    
    public void push(int x) {
        st.push(x);
    }
    
    public int pop() {
        if (!st.isEmpty()) {
            while(!st.isEmpty()) {
                tmp.push(st.pop());
            }
        }
        if (!tmp.isEmpty()) {
            res = tmp.pop();
            while(!tmp.isEmpty()) {
                st.push(tmp.pop());
            }
        }
        return res;
    }
    
    public int peek() {
        if (!st.isEmpty()) {
            while(!st.isEmpty()) {
                tmp.push(st.pop());
            }
        }
        if (!tmp.isEmpty()) {
            res = tmp.pop();
            st.push(res);
            while(!tmp.isEmpty()) {
                st.push(tmp.pop());
            }
        }
        return res;
    }
    
    public boolean empty() {
        return st.isEmpty();
    }
}

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue obj = new MyQueue();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.peek();
 * boolean param_4 = obj.empty();
 */
