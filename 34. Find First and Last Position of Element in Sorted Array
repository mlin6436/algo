https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array

class Solution {
    public int[] searchRange(int[] nums, int target) {
        var left = 0;
        var right = nums.length - 1;
        int[] res = {-1,-1};
        while (left <= right) {
            var mid = left + (right - left) / 2;
            if (nums[mid] == target) {
                left = mid;
                while (left >= 0 && nums[left] == target) {
                    left--;
                }
                right = mid;
                while (right < nums.length && nums[right] == target) {
                    right++;
                }
                return new int[]{left + 1, right - 1};
            } else if (nums[mid] < target) {
                left = mid + 1;
            } else {
                right = mid - 1;
            }
        }
        return res;
    }
}

====

class Solution {
    public int[] searchRange(int[] nums, int target) {
        int left = 0;
        int right = nums.length - 1;

        while (left <= right) {
            int mid = (left + right) / 2;
            if (nums[mid] == target) {
                int[] res = new int[]{mid, mid};
                left = mid - 1; 
                while (left >= 0 && nums[left] == target) {
                    left--;
                }
                right = mid + 1;
                while (right < nums.length && nums[right] == target) {
                    right++;
                }
                res[0] = left + 1;
                res[1] = right - 1;
                return res;
            } else if (nums[mid] < target) {
                left = mid + 1;
            } else {
                right = mid - 1;
            }
        }

        return new int[]{-1, -1};
    }
}

