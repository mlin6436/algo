https://leetcode.com/problems/degree-of-an-array/

class Solution {
    public int findShortestSubArray(int[] nums) {
        var map = new HashMap<Integer, Integer>();
        var left = new HashMap<Integer, Integer>();
        var right = new HashMap<Integer, Integer>();
        for (int i = 0; i < nums.length; i++) {
            map.put(nums[i], map.getOrDefault(nums[i], 0) + 1);
            if (left.get(nums[i]) == null) left.put(nums[i], i);
            right.put(nums[i], i);
        }
        int degree = Collections.max(map.values());
        int res = nums.length;
        for (var entry: map.entrySet()) {
            if (entry.getValue() == degree) {
                res = Math.min(res, right.get(entry.getKey()) - left.get(entry.getKey()) + 1);
            }
        }
        return res;
    }
}
