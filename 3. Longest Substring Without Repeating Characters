https://leetcode.com/problems/longest-substring-without-repeating-characters/

class Solution {
    public int lengthOfLongestSubstring(String s) {
        int len = s.length();
        if (len == 0) {
            return 0;
        }
        if (len == 1) {
            return 1;
        }
        
        int res = 0;
        int right = 0;
        String temp = "";
        while (right < len) {
            String cur = String.valueOf(s.charAt(right));
            if (!temp.contains(cur)) {
                temp += cur;
            } else {
                int dup = temp.indexOf(cur);
                res = Math.max(res, temp.length());
                temp = temp.substring(dup + 1);
                temp += cur;
            }
            right++;
        }
        
        return Math.max(res, temp.length());
    }
}

====

class Solution {
    public int lengthOfLongestSubstring(String s) {
        int len = s.length();
        if (len == 0) {
            return 0;
        }
        if (len == 1) {
            return 1;
        }

        int res = 0;
        int slow = 0;
        int fast = 1;
        Set<Character> temp = new HashSet();
        temp.add(s.charAt(slow));
        while(fast < len && slow <= fast) {
            if (!temp.contains(s.charAt(fast))) {
                temp.add(s.charAt(fast));
                res = Math.max(res, temp.size());
                fast++;
            } else {
                temp.remove(s.charAt(slow));
                slow++;
            }
        }

        return res;
    }
}
