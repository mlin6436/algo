https://leetcode.com/problems/cousins-in-binary-tree/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isCousins(TreeNode root, int x, int y) {
        if (root == null) {
            return false;
        }
        
        Queue<TreeNode> q = new LinkedList();
        q.offer(root);
        int level = 0;
        int size = 0;
        int levelX = -1;
        int levelY = -2;
        while (!q.isEmpty()) {
            size = q.size();
            level++;
            
            while (size > 0) {
                TreeNode cur = q.poll();
                
                if (cur.left != null && cur.right != null) {
                    if (cur.left.val == x && cur.right.val == y ||
                        cur.right.val == x && cur.left.val == y
                       ) return false;
                }
                
                if (cur.left != null) q.offer(cur.left);
                if (cur.right != null) q.offer(cur.right);
                
                if (cur.val == x) levelX = level;
                if (cur.val == y) levelY = level;
                
                if (levelX == levelY) return true;
                
                size--;
            }
        }
        
        return false;
    }
}
